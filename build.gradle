plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group = 'org.bluk'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://repo.codemc.org/repository/maven-releases/"
    }
    maven {
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'net.skinsrestorer:skinsrestorer-api:14.2.10'
    implementation 'com.github.jonahseguin:drink:1b60eff7e0'
    implementation 'org.reflections:reflections:0.10.2'
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'
    implementation 'io.minio:minio:8.5.3'
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks {
    build {
        dependsOn(shadowJar)
    }
    shadowJar {
        archiveName = "avmeister.jar"

        mergeServiceFiles()
        archiveClassifier.set("")
    }
}